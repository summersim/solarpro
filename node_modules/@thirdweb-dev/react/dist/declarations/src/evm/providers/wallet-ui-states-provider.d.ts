/// <reference types="react" />
import { Theme } from "../../design-system";
import { WelcomeScreen } from "../../wallet/ConnectWallet/screens/types";
type BoolSetter = (value: boolean) => void;
export type ModalConfig = {
    title: string;
    theme: "light" | "dark" | Theme;
    data: any;
    modalSize: "wide" | "compact";
    termsOfServiceUrl?: string;
    privacyPolicyUrl?: string;
    welcomeScreen?: WelcomeScreen;
    titleIconUrl?: string;
    auth?: {
        loginOptional?: boolean;
        onLogin?: (token: string) => void;
        onLogout?: () => void;
    };
};
export declare const ModalConfigCtx: import("react").Context<ModalConfig>;
export declare const SetModalConfigCtx: import("react").Context<import("react").Dispatch<import("react").SetStateAction<ModalConfig>>>;
export declare const WalletUIStatesProvider: (props: React.PropsWithChildren<{
    theme?: "light" | "dark" | Theme;
    modalSize?: "wide" | "compact";
    title?: string;
    titleIconUrl?: string;
    termsOfServiceUrl?: string;
    privacyPolicyUrl?: string;
    welcomeScreen?: WelcomeScreen;
}>) => import("react/jsx-runtime").JSX.Element;
/**
 * Check if the [`ConnectWallet`](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal is open or not
 *
 * @example
 * ```tsx
 * const isOpen = useIsWalletModalOpen();
 * ```
 *
 * @returns `true` if the [`ConnectWallet`](https://portal.thirdweb.com/react/v4/components/ConnectWallet) modal is open, `false` otherwise
 * @connectWallet
 */
export declare const useIsWalletModalOpen: () => boolean;
/**
 * Open or close the [`ConnectWallet`](https://portal.thirdweb.com/react/v4/components/ConnectWallet) Modal
 *
 * @example
 * ```tsx
 * const setIsWalletModalOpen = useSetIsWalletModalOpen();
 *
 * function openModal() {
 *  setIsWalletModalOpen(true);
 * }
 *
 * function closeModal() {
 *  setIsWalletModalOpen(false);
 * }
 *
 * return (
 *   <div>
 *    <button onClick={openModal}>Open Modal</button>
 *    <button onClick={closeModal}>Close Modal</button>
 *   </div>
 * )
 * ```
 *
 * @returns Function to open or close the modal
 * @connectWallet
 */
export declare const useSetIsWalletModalOpen: () => BoolSetter;
export {};
//# sourceMappingURL=wallet-ui-states-provider.d.ts.map